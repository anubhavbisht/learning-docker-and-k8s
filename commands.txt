1. docker run imagename(create and run a container)
2. docker run imagename overridingcommand
so what this overridingcommand does is it overrides start container command
docker run busybox ls
3. running containers in your system
docker ps(running active containers)
docker ps -a(inactive containers)
4. docker run = docker create + docker start
5. docker create imagename(basically creates a container and gives you a container id)
6. docker start containerId(starts the above container but no content will be printed)
7. docker start -a containerId(starts the above container and content will be printed)
8. If a container has some default starting command you can't reissue the same again when 
you start the exited container
9. docker system prune(removes all containers and build image cache)
10. docker logs containerId(to check logs of container)
11. Stopping a container
 docker stop containerId(SIGTERM waits upto 10s)
 docker kill containerId(SIGKILL automatically kills)
12. To run commands in running container
docker exec -it containerId yourcommand
13. this -it flag is comprised of 2 flags i.e. -i  and -t
what -i does is it attaches your terminal(i.e host computer) into the container 
-t does pretty formatting of the text we enter or the output we get
we can write -it as -i -t too
each container has 3 channels stdin stdout stderr
the stuff you write gets sent to container via stdin channel
and the stuff you see in your terminal is sent by container to the host computer via stdout channel
14. to open up a shell or cli in running container
docker exec -it containerId sh
15. docker run -it busybox sh